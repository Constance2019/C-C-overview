1.strcpy()函数
char* my_strcpy(char *str1,const char* str2)
{
	assert(str1 != NULL && str2 !=NULL);
	char * ptr=str1;
	const char *ptr2=str2;
	while (*ptr2 != '\0')
	{ 
		*ptr= *ptr2;
		ptr++;
		ptr2++;
	}
	*ptr = '\0';
	return str1;
}
 void main()
 {
	 char str[10];
	 my_strcpy(str,"hello");
	 cout<<str<<endl;
 }
2.strncpy()函数
char *my_strncpy(char* str1,const char* str2,int n)
{
	assert(str1 != NULL &&  str2 != NULL);
	char * ptr=str1;
	while(n)
	{
		*ptr++ = *str2++ ;
		n--;
	}
	//if(n == 0)
		*ptr= '\0';
	return str1;
}

void main()
{
	char str[10]="worldd";
	char a[]="hello";
	my_strncpy(str,a,sizeof(a));
	cout<<str<<endl;

}
3.strcat() 函数
char *my_strcat(char *str1,char *str2)
{
	assert(str1 != NULL && str2 != NULL);
	char *ptr1=str1;
	char *ptr2=str2;
	while(*ptr1 != '\0')
	{
		ptr1++;
	}
	while(*ptr2 != '\0')
	{
		*ptr1++ =* ptr2++;
	}
	*ptr1 ='\0';
	return str1;
}
void main()
{
	char a[]="hello ";
	char b[]="world ,l love china";
	char *str=my_strcat(a,b);
	cout<<a<<endl;
}

4.strcmp()函数
int my_strcmp(const char* str1,const char* str2)
{
	assert(str1 != NULL && str2 != NULL);
	const char *ptr1=str1;
	const char *ptr2=str2;
	int ret=0;
	while(*ptr1 != '\0' && !(ret=(*ptr1-*ptr2)))
	{
		ptr1++;
		ptr2++;
	}
	if(ret < 0)
		return -1;
	else if(ret >0)
		return 1;
	return 0;
}
void main()
{
	char str1[]="AAAA";
	char *str2="CCCC";
	int flag=my_strcmp(str1,str2);
	cout<<flag<<endl;
}
5.strlen()函数
int str_count(char *str)
{
	assert(str != NULL);
	char *ptr=str;
	int count=0;
	while(*ptr++ != '\0')
	{
		count ++;
	}
	return count;
}

void main()
{
	char str[]="helloworld11";
	cout<<str_count(str)<<endl;
}
